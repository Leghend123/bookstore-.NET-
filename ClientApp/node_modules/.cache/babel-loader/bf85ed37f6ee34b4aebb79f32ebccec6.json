{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Latf\\\\innorik\\\\ClientApp\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\n// src/components/Dashboard.js\nimport React, { useEffect, useState } from \"react\";\nimport DashboardLayout from \"./DashboardLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [bookCount, setBookCount] = useState(0);\n  useEffect(() => {\n    const fetchBookCount = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/Book/count\");\n        setBookCount(response.data.count);\n      } catch (error) {\n        console.error(\"Error fetching book count:\", error);\n      }\n    };\n\n    fetchBookCount();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DashboardLayout, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: \"Total Books\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: bookCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Dashboard, \"W0A2hOea4464FrYo4KC8Bm49Zu4=\");\n\n_c = Dashboard;\n;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","DashboardLayout","Dashboard","bookCount","setBookCount","fetchBookCount","response","axios","get","data","count","error","console"],"sources":["C:/Users/Latf/innorik/ClientApp/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport DashboardLayout from \"./DashboardLayout\";\r\n\r\nfunction Dashboard() {\r\n  const [bookCount, setBookCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchBookCount = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/Book/count\");\r\n        setBookCount(response.data.count);\r\n      } catch (error) {\r\n        console.error(\"Error fetching book count:\", error);\r\n      }\r\n    };\r\n\r\n    fetchBookCount();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <DashboardLayout>\r\n        <Container>\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Total Books</Card.Title>\r\n              <Card.Text>{bookCount}</Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        {/* Add other cards/components as needed */}\r\n      </Row>\r\n    </Container>\r\n      </DashboardLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EACnB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,CAAD,CAA1C;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMM,cAAc,GAAG,YAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,sCAAV,CAAvB;QACAJ,YAAY,CAACE,QAAQ,CAACG,IAAT,CAAcC,KAAf,CAAZ;MACD,CAHD,CAGE,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;MACD;IACF,CAPD;;IASAN,cAAc;EACf,CAXQ,EAWN,EAXM,CAAT;EAYA,oBACE;IAAA,uBACE,QAAC,eAAD;MAAA,uBACE,QAAC,SAAD;QAAA,uBACF,QAAC,GAAD;UAAA,uBACE,QAAC,GAAD;YAAA,uBACE,QAAC,IAAD;cAAA,uBACE,QAAC,IAAD,CAAM,IAAN;gBAAA,wBACE,QAAC,IAAD,CAAM,KAAN;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAEE,QAAC,IAAD,CAAM,IAAN;kBAAA,UAAYF;gBAAZ;kBAAA;kBAAA;kBAAA;gBAAA,QAFF;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADE;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAmBD;;GAlCQD,S;;KAAAA,S;AAkCR;AAED,eAAeA,SAAf","ignoreList":[]},"metadata":{},"sourceType":"module"}